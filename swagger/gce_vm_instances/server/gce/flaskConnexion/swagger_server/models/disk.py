# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DISK(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, auto_delete=None, boot=None, device_name=None, guest_os_features=None):  # noqa: E501
        """DISK - a model defined in Swagger

        :param auto_delete: The auto_delete of this DISK.  # noqa: E501
        :type auto_delete: bool
        :param boot: The boot of this DISK.  # noqa: E501
        :type boot: bool
        :param device_name: The device_name of this DISK.  # noqa: E501
        :type device_name: str
        :param guest_os_features: The guest_os_features of this DISK.  # noqa: E501
        :type guest_os_features: List[object]
        """
        self.swagger_types = {
            'auto_delete': bool,
            'boot': bool,
            'device_name': str,
            'guest_os_features': List[object]
        }

        self.attribute_map = {
            'auto_delete': 'autoDelete',
            'boot': 'boot',
            'device_name': 'deviceName',
            'guest_os_features': 'guestOsFeatures'
        }

        self._auto_delete = auto_delete
        self._boot = boot
        self._device_name = device_name
        self._guest_os_features = guest_os_features

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DISK of this DISK.  # noqa: E501
        :rtype: DISK
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_delete(self):
        """Gets the auto_delete of this DISK.


        :return: The auto_delete of this DISK.
        :rtype: bool
        """
        return self._auto_delete

    @auto_delete.setter
    def auto_delete(self, auto_delete):
        """Sets the auto_delete of this DISK.


        :param auto_delete: The auto_delete of this DISK.
        :type auto_delete: bool
        """

        self._auto_delete = auto_delete

    @property
    def boot(self):
        """Gets the boot of this DISK.


        :return: The boot of this DISK.
        :rtype: bool
        """
        return self._boot

    @boot.setter
    def boot(self, boot):
        """Sets the boot of this DISK.


        :param boot: The boot of this DISK.
        :type boot: bool
        """

        self._boot = boot

    @property
    def device_name(self):
        """Gets the device_name of this DISK.


        :return: The device_name of this DISK.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this DISK.


        :param device_name: The device_name of this DISK.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def guest_os_features(self):
        """Gets the guest_os_features of this DISK.


        :return: The guest_os_features of this DISK.
        :rtype: List[object]
        """
        return self._guest_os_features

    @guest_os_features.setter
    def guest_os_features(self, guest_os_features):
        """Sets the guest_os_features of this DISK.


        :param guest_os_features: The guest_os_features of this DISK.
        :type guest_os_features: List[object]
        """

        self._guest_os_features = guest_os_features
